postgresql_objects_users:
  - name: galaxy
postgresql_objects_databases:
  - name: galaxy
    owner: galaxy
postgresql_backup_dir: /archive

#Galaxy
galaxy_create_user: true
galaxy_separate_privileges: true
galaxy_manage_paths: true
galaxy_layout: root-dir
galaxy_root: "{{ vault_galaxy_root }}/galaxy"
#galaxy_file_path: /data
galaxy_user: {name: galaxy, shell: /bin/bash,  uid: "{{ vault_galaxy_user_uid }}" }
galaxy_group: {name: galaxy, gid: "{{ vault_galaxy_group_gid }}" }
galaxy_commit_id: release_19.05
galaxy_config_style: yaml
galaxy_force_checkout: true # always checkout from code amnd overwrite local changes
miniconda_prefix: "{{ galaxy_tool_dependency_dir }}/_conda"

#.fix perms
__galaxy_dir_perms: '0755'

galaxy_config_files:
#  - src: "files/galaxy/config/datatypes_conf.xml"
#    dest: "{{ galaxy_config['galaxy']['datatypes_config_file'] }}"
  - src: "files/galaxy/config/job_conf.xml"
    dest: "{{ galaxy_config['galaxy']['job_config_file'] }}"
  - src: files/galaxy/config/dependency_resolvers_conf.xml
    dest: "{{ galaxy_config['galaxy']['dependency_resolvers_config_file'] }}"


galaxy_config_template_src_dir: templates/galaxy
galaxy_config_templates:
  - src: "{{ galaxy_config_template_src_dir }}/config/global_host_filters.py.j2"
    dest: "{{ galaxy_server_dir }}/lib/galaxy/tools/toolbox/filters/global_host_filters.py"

galaxy_config:
  galaxy:
    admin_users: "{{ vault_admin_users }}"
    brand: "Comp Chem ZA"
    database_connection: "postgresql:///galaxy?host=/var/run/postgresql"
    # file_path: /data # is defined by the template don't mess with this right now
    check_migrate_tools: false
    job_config_file: "{{ galaxy_config_dir }}/job_conf.xml"
    dependency_resolvers_config_file: "{{ galaxy_config_dir }}/dependency_resolvers_conf.xml"
    enable_quotas: True # set the quota's in the admin interface
    smtp_server: "{{ vault_smtp_server }}"
    smtp_username: "{{ vault_smtp_username }}"
    smtp_password: "{{ vault_smtp_password }}"
    smtp_ssl: true
    tool_label_filters: 'global_host_filters:per_host_tool_labels'
    tool_section_filters: 'global_host_filters:per_host_tool_sections'
  uwsgi:
    # Default values
    socket: 127.0.0.1:8080
    buffer-size: 16384
    processes: 1
    threads: 4
    offload-threads: 2
    static-map:
      - /static/style={{ galaxy_server_dir }}/static/style/blue
      - /static={{ galaxy_server_dir }}/static
    master: true
    virtualenv: "{{ galaxy_venv_dir }}"
    pythonpath: "{{ galaxy_server_dir }}/lib"
    module: galaxy.webapps.galaxy.buildapp:uwsgi_app()
    thunder-lock: true
    die-on-term: true
    hook-master-start:
      - unix_signal:2 gracefully_kill_them_all
      - unix_signal:15 gracefully_kill_them_all
    py-call-osafterfork: true
    enable-threads: true
    # Our additions
    mule:
      - lib/galaxy/main.py
      - lib/galaxy/main.py
    farm: job-handlers:1,2


#supervisor
#
supervisor_socket_user: galaxy
supervisor_socket_chown: galaxy
galaxy_restart_handler_name: Restart Galaxy
supervisor_programs:
  - name: galaxy
    state: present
    command: uwsgi --yaml {{ galaxy_config_dir }}/galaxy.yml
    configuration: |
      autostart=true
      autorestart=true
      startretries=1
      startsecs=10
      user=galaxy
      umask=022
      directory={{ galaxy_server_dir }}
      environment=HOME="{{ galaxy_mutable_data_dir }}",VIRTUAL_ENV="{{ galaxy_venv_dir }}",PATH="{{ galaxy_venv_dir }}/bin:%(ENV_PATH)s",DRMAA_LIBRARY_PATH="/usr/lib/slurm-drmaa/lib/libdrmaa.so.1"
# Certbot
certbot_auto_renew_hour: "{{ 23 |random(seed=inventory_hostname)  }}"
certbot_auto_renew_minute: "{{ 59 |random(seed=inventory_hostname)  }}"
certbot_auth_method: --webroot
certbot_install_method: virtualenv
certbot_auto_renew: yes
certbot_auto_renew_user: root
certbot_environment: production
certbot_well_known_root: /srv/nginx/_well-known_root
certbot_share_key_users:
  - nginx
certbot_post_renewal: |
    systemctl restart nginx || true
certbot_domains:
 - "{{ inventory_hostname }}"
certbot_agree_tos: --agree-tos

# NGINX
nginx_selinux_allow_local_connections: true
nginx_servers:
  - redirect-ssl
nginx_enable_default_server: false
nginx_ssl_servers:
  - galaxy
nginx_conf_http:
  client_max_body_size: 1g
nginx_remove_default_vhost: true
nginx_ssl_role: usegalaxy-eu.certbot
nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-nginx.pem

# tools
galaxy_local_tools:
- testing.xml
- absolute_binding.xml
- absolute_solvation.xml
- alchemical_setup.xml
- testing.xml
- yank_analysis.xml

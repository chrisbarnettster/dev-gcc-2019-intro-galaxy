postgresql_objects_users:
  - name: galaxy
postgresql_objects_databases:
  - name: galaxy
    owner: galaxy

#Galaxy
galaxy_create_user: true
galaxy_separate_privileges: true
galaxy_manage_paths: true
galaxy_layout: root-dir
galaxy_root: /srv/galaxy
galaxy_file_path: /data
galaxy_user: {name: galaxy, shell: /bin/bash}
galaxy_commit_id: release_19.05
galaxy_config_style: yaml
galaxy_force_checkout: true # always checkout from code amnd overwrite local changes
galaxy_file_path: /data
miniconda_prefix: "{{ galaxy_tool_dependency_dir }}/_conda"

galaxy_config_files:
  - src: files/galaxy/config/job_conf.xml
    dest: "{{ galaxy_config['galaxy']['job_config_file'] }}"

galaxy_config:
  galaxy:
    admin_users: admin@example.com
    brand: "Freiburg GCC"
    database_connection: "postgresql:///galaxy?host=/var/run/postgresql"
    file_path: /data
    check_migrate_tools: false
    job_config_file: "{{ galaxy_config_dir }}/job_conf.xml"
    master_api_key: super-secret-admin-key-wowzers
    shed_tool_data_path: /srv/galaxy/var/tool-data
    tool_data_path: /srv/galaxy/var/tool-data
    tool_data_table_config_path: /cvmfs/data.galaxyproject.org/byhand/location/tool_data_table_conf.xml,/cvmfs/data.galaxyproject.org/managed/location/tool_data_table_conf.xml
  uwsgi:
    # Default values
    socket: 127.0.0.1:8080
    buffer-size: 16384
    processes: 1
    threads: 4
    offload-threads: 2
    static-map:
      - /static/style={{ galaxy_server_dir }}/static/style/blue
      - /static={{ galaxy_server_dir }}/static
    master: true
    virtualenv: "{{ galaxy_venv_dir }}"
    pythonpath: "{{ galaxy_server_dir }}/lib"
    module: galaxy.webapps.galaxy.buildapp:uwsgi_app()
    thunder-lock: true
    die-on-term: true
    hook-master-start:
      - unix_signal:2 gracefully_kill_them_all
      - unix_signal:15 gracefully_kill_them_all
    py-call-osafterfork: true
    enable-threads: true
    # Our additions
    mule:
      - lib/galaxy/main.py
      - lib/galaxy/main.py
    farm: job-handlers:1,2

#supervisor
#
supervisor_socket_user: galaxy
supervisor_socket_chown: galaxy
galaxy_restart_handler_name: Restart Galaxy
supervisor_programs:
  - name: galaxy
    state: present
    command: uwsgi --yaml {{ galaxy_config_dir }}/galaxy.yml
    configuration: |
      autostart=true
      autorestart=true
      startretries=1
      startsecs=10
      user=galaxy
      umask=022
      directory={{ galaxy_server_dir }}
      environment=HOME="{{ galaxy_mutable_data_dir }}",VIRTUAL_ENV="{{ galaxy_venv_dir }}",PATH="{{ galaxy_venv_dir }}/bin:%(ENV_PATH)s",DRMAA_LIBRARY_PATH="/usr/lib/slurm-drmaa/lib/libdrmaa.so.1"

# NGINX
nginx_selinux_allow_local_connections: true
nginx_servers:
  - galaxy
nginx_enable_default_server: false
nginx_conf_http:
  client_max_body_size: 1g
nginx_remove_default_vhost: true

# tools
galaxy_local_tools:
  - testing.xml

# CVMFS vars
cvmfs_role: client
galaxy_cvmfs_repos_enabled: true
cvmfs_quota_limit: 2000


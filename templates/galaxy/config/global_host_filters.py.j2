import logging
log = logging.getLogger( __name__ )

def per_host_tool_labels( context, label ):
    """
    This tool section filter results in different labels being displayed based on
    the fqdn the user is making the request to. This could allow a single Galaxy instance
    to seem like several different instances hosting different tools based on the fqdn used
    to access the Galxy. This can be enabled by renaming this file to examples.py and adding
    the following to the ``app:main`` section of ``galaxy.yml``:

        tool_label_filters = examples:per_host_tool_labels
    """
    host = context.trans.request.host
    # Core tools used by all virtual hosts.
    valid_labels = [ "file_meta_label", "general_text_label"]
    general_ngs_labels = [ "genomics_label" ]
    # HiCtools mode: published in NAR 2018
    if "humancellatlas.usegalaxy.eu" in host or "nanopore.usegalaxy.eu" in host or "hicexplorer.usegalaxy.eu" in host or "singlecell.usegalaxy.eu" in host or "metagenomics.usegalaxy.eu" in host or "rna.usegalaxy.eu" in host or "clipseq.usegalaxy.eu" in host or "graphclust.usegalaxy.eu" in host or "annotation.usegalaxy.eu" in host:
        valid_labels += general_ngs_labels
        return label.id in valid_labels
    if "cheminformatics.usegalaxy.eu" in host:
        return label.id in valid_labels
    if "imaging.usegalaxy.eu" in host:
        return label.id in valid_labels
    if "climate.usegalaxy.eu" in host:
        return label.id in valid_labels
    if "metabolomics.usegalaxy.eu" in host:
        return label.id in valid_labels
    return True

# the name of each tool section comes from the id as found in integrated_tool_panel.xml (16.08.2019)

BASE_SECTIONS = ["textutil", "getext", "collection_operations",
        "convert", "filter", "group","stats"]

COMPCHEM_SECTIONS = ["chemicaltoolbox","BRIDGE","md_analysis","md_build","md_engine"]

GENERAL_NGS_SECTIONS = ["deeptools", "bed_tools",
        "operate_on_genomic_intervals", "fasta_fastq_manipulation",
        "fasta/fastq_manipulation", "fastq_quality_control", "quality_control",
        "picard", "mapping"]

DOMAIN_SECTIONS = {
    'hicexplorer': GENERAL_NGS_SECTIONS + ["hicexplorer"],
    'nanopore': GENERAL_NGS_SECTIONS + ["hicexplorer", "nanopore",
        "metagenomic_analyses", "mothur", "qiime", "biom_manipulation",
        "ncbi_blast", "fasta_fastq", "assembly", "graph_display_data"],
    'climate': ["climate_analysis", "gis_data_handling"],
    'metagenomics': GENERAL_NGS_SECTIONS + ["fasta_fastq_manipulation",
        "quality_control", "multiple_alignments", "assembly", "annotation",
        "display_data", "metagenomic_analyses", "mothur", "qiime",
        "biom_manipulation"],
    'rna': GENERAL_NGS_SECTIONS + ["rna_analysis", "annotation",
        "graph/display_data"],
    'singlecell': GENERAL_NGS_SECTIONS + ["rna_analysis", "annotation",
        "graph/display_data", "single-cell"],
    'humancellatlas': GENERAL_NGS_SECTIONS + ["rna_analysis", "annotation",
        "graph/display_data", "single-cell", "hca-single_cell"],
    'clipseq': GENERAL_NGS_SECTIONS + ["rna_analysis", "peak_calling",
        "motif_tools"],
    'graphclust': GENERAL_NGS_SECTIONS + ["rna_analysis", "graphclust"],
    'cheminformatics': ['chemicaltoolbox'],
    'imaging': ['imaging', 'proteomics'],
    'metabolomics': ['metabolomics'],
    'annotation': GENERAL_NGS_SECTIONS + ['annotation', 'apollo', 'ncbi_blast', 'assembly', 'variant_calling', 'fetch_sequences_alignments', 'ontology', 'emboss', 'evolution', 'genome_diversity', 'multiple_alignments', 'display_data'],

}


def per_host_tool_sections( context, section ):
    """
    This tool section filter results in different sections being displayed based on
    the fqdn the user is making the request to. This could allow a single Galaxy instance
    to seem like several different instances hosting different tools based on the fqdn used
    to access the Galxy. This can be enabled by renaming this file to examples.py and adding
    the following to the ``app:main`` section of ``galaxy.yml``:

        tool_section_filters = examples:per_host_tool_sections
    """
    host = context.trans.request.host
    subdomain = host.replace('.usegalaxy.eu', '')

    # hide HCA tools from other subdomains than humancellatlas, do not confuse users by duplicated tools
    if section.id in ['hca-single_cell']:
        if 'humancellatlas' in host:
            return True
        else:
            return False

    # Core tools used by all virtual hosts.
    # HiCtools mode: published in NAR 2018
    if host == "galaxy-compchem.ilifu.ac.za":
        return section.id in BASE_SECTIONS or section.id in COMPCHEM_SECTIONS

    if subdomain in DOMAIN_SECTIONS:
        return section.id in DOMAIN_SECTIONS[subdomain] or section.id in BASE_SECTIONS
    else:
        return section.id in BASE_SECTIONS
